install.packages(c("boot", "gplots", "highr", "KernSmooth", "knitr", "MASS", "mgcv", "mime", "nlme", "Rcpp", "rmarkdown", "sp"))
system.time(transactions <- read.transactions("assets/unique_pagehits_exclude_frontpage.csv", format="basket", sep=","))
setwd("~/git/associationAnalysis")
system.time(transactions <- read.transactions("assets/unique_pagehits_exclude_frontpage.csv", format="basket", sep=","))
system.time(transactions <- read.transactions("assets/unique_pagehits.csv", format="basket", sep=","))
library(ggplot2)
library(arules)
system.time(transactions <- read.transactions("assets/unique_pagehits_exclude_frontpage.csv", format="basket", sep=","))
itemFrequencyPlot(transactions, support=0.001)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.70, minlen=2)))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.50, minlen=2)))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.02, conf=0.35, minlen=2, maxlen=2)))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.20, minlen=2)))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.10, minlen=2)))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01), appearance = list(lhs = c("news"), default="lhs") )
)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.10, minlen=2)))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01), appearance = list(lhs = c("news"), default="lhs")))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01), appearance = list(lhs = c("news"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("news"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("bbs"), default="rhs")))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("business"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("health"), default="rhs")))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("living"), default="rhs")))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("local"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("misc"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("msn-news"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("msn-sports"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("news"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("on-air"), default="rhs")))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("on-air"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("opinion"), default="rhs")))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("sports"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("summary"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("tech"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("travel"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2), appearance = list(lhs = c("weather"), default="rhs")))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.10, minlen=2)))
inspect(rules)
sort(rules, decreasing = TRUE, na.last = NA, by = "support")
inspect(rules)
sort(rules, decreasing = TRUE, na.last = NA, by = "support")
inspect(rules)
sort(rules, decreasing = TRUE, na.last = NA, by = "lhs")
sort(rules, decreasing = TRUE, na.last = NA, by = "lift")
inspect(rules)
image(transactions)
summary(transactions)
system.time(transactions <- read.transactions("assets/unique_pagehits_exclude_frontpage.csv", format="basket", sep=","))
itemFrequencyPlot(transactions, support=0.001)
itemFrequencyPlot(transactions, support=0.001)
summary(transactions)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.10, minlen=2)))
summary(rules)
summary(transactions)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.01, minlen=2)))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.10, minlen=3)))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.010, minlen=3)))
trans <- random.transactions(nItems = 200, nTrans = 1000,iProb = seq(0.2,0.0001, length=200))
summary(trans)
image(trans)
patterns <- random.pattern(nItems = 1000)
trans2 <- random.transactions(nItems = 1000, nTrans = 1000,method = "agrawal", patterns = patterns)
image(trans[,order(itemFrequency(trans), decreasing=TRUE)])
system.time(transactions <- read.transactions("assets/unique_pagehits_exclude_frontpage.csv", format="basket", sep=","))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.010, target="maximally frequent itemsets")))
inspect(rules)
transactionInfo
showMethods("transactionInfo")
transactionInfo(transactions)
size(itemMatrix)
itemFrequency(transactions)
size(transactions)
system.time(transactions <- read.transactions("assets/unique_pagehits.csv", format="basket", sep=","))
summary(transactions)
itemFrequency(transactions, support=0.001)
itemFrequency(transactions)
itemFrequencyPlot(transactions, support=0.001)
library(ggplot2)
library(arules)
##########################################
## Unique page hits
##########################################
# load page hit data
system.time(transactions <- read.transactions("assets/unique_pagehits.csv", format="basket", sep=","))
summary(transactions)
itemFrequency(transactions)
library(ggplot2)
library(arules)
library(arulesSequences)
install.packages("arulesSequences")
install.packages("aruleviz")
install.packages("arules")
install.packages("arulesSequences")
setwd("~/git/associationAnalysis")
transactions <- read.transactions("assets/pagehits_all.csv", format="basket", sep=",")
library(ggplot2)
library(arules)
library(arulesSequences)
library(aruleviz)
install.packages("ggplot2")
library(ggplot2)
library(arules)
library(arulesSequences)
library(aruleviz)
install.packages("aruleviz")
install.packages("arulesViz")
library(aruleViz)
library(arulesViz)
transactions <- read.transactions("assets/pagehits_all.csv", format="basket", sep=",")
transactions <- read.transactions("assets/SequentialData.csv", format="basket", sep=",")
x <- read_baskets(con = system.file("misc", "SequentialData.txt", package = "arulesSequences"), info = c("sequenceID","eventID","SIZE"))
library(ggplot2)
library(Matrix)
library(arules)
library(arulesSequences)
library(arulesViz)
x <- read_baskets(con = system.file("misc", "SequentialData.txt", package = "arulesSequences"), info = c("sequenceID","eventID","SIZE"))
x <- read_baskets(con = system.file("misc", "SequentialData2.txt", package = "arulesSequences"), info = c("sequenceID","eventID","SIZE"))
system.time(transactions <- read.transactions("assets/unique_pagehits.csv", format="basket", sep=","))
summary(transactions)
itemFrequency(transactions)
library(ggplot2)
library(Matrix)
library(arules)
library(arulesSequences)
library(arulesViz)
x <- read_baskets(con = system.file("misc", "SequentialData.txt", package = "arulesSequences"), info = c("sequenceID","eventID","SIZE"))
?read_baskets
x <- read_baskets(con = "SequentialData.txt", info = c("sequenceID","eventID","SIZE"))
x <- read_baskets(con = system.file("misc", "SequentialData.txt", package = "arulesSequences"), sep = "[ \t]+", info = c("sequenceID","eventID","SIZE"))
?system.file
connection = system.file("misc", "assets/SequentialData.txt", package = "arulesSequences")
x <- read_baskets(connection, sep = "[ \t]+", info = c("sequenceID","eventID","SIZE"))
setwd("~/git/associationAnalysis")
connection = system.file("misc", "assets/SequentialData.txt", package = "arulesSequences")
x <- read_baskets(connection, sep = "[ \t]+", info = c("sequenceID","eventID","size"))
connection = system.file("misc", "assets/SequentialData.txt", package = "arulesSequences")
connection
connection = system.file("misc", "assets/SequentialData.txt")
connection = system.file("assets/SequentialData.txt")
x <- read_baskets(connection, sep = "[ \t]+", info = c("sequenceID","eventID","size"))
list.files()
connection <- file("assets/SequentialData.txt", "w+b")  # open an output file connection
x <- read_baskets(connection, sep = "[ \t]+", info = c("sequenceID","eventID","size"))
cat /usr/local/lib/R/site-library/arulesSequences/misc/zaki.txt
x <- read_baskets(con = system.file("misc", "SequentialData.txt", package = "arulesSequences"), info = c("sequenceID","eventID","size"))
x <- read_baskets(con = system.file("misc", "SequentialData.txt", package = "arulesSequences"), info = c("sequenceID","eventID","size"))
as(x, "data.frame")
s1 <- cspade(x, parameter = list(support = 0.1), control = list(verbose = TRUE))
summary(s1)
as(s1, "data.frame")
s1 <- cspade(x, parameter = list(support = 0.25), control = list(verbose = TRUE))
summary(s1)
summary(x)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.10, minlen=2)))
library(ggplot2)
library(arules)
system.time(transactions <- read.transactions("assets/unique_pagehits.csv", format="basket", sep=","))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.10, minlen=2)))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.20, minlen=2)))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.80, minlen=2)))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.75, minlen=2)))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.25, minlen=2)))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.50, minlen=2)))
inspect(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.50, minlen=2)))
summary(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.30, minlen=2)))
summary(rules)
inspect(rules)
library(ggplot2)
library(arules)
library(arulesViz)
system.time(transactions <- read.transactions("assets/unique_pagehits.csv", format="basket", sep=","))
setwd("~/git/associationAnalysis")
system.time(transactions <- read.transactions("assets/unique_pagehits.csv", format="basket", sep=","))
summary(transactions)
itemFrequency(transactions)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.30, minlen=2)))
summary(rules)
inspect(sort(rules, by="support"))
plot(rules, measure="support", shading="lift")
plot(rules, measure="support", shading="confidence")
plot(rules, measure=c("support","lift"), shading="confidence")
plot(rules, shading="order", control=list(main="Two-key plot"))
sel <- plot(rules, measure=c("support","lift"), shading="confidence", interactive=TRUE)
plot(rules, method="matrix", measure="lift")
plot(rules, method="matrix", measure="lift", control=list(reorder=TRUE))
plot(rules, method="matrix3D", measure="lift")
plot(rules, method="matrix3D", measure="lift", control=list(reorder=TRUE))
plot(rules, method="matrix", measure=c("lift","confidence"))
plot(rules, method="matrix", measure=c("lift","confidence"), control=list(reorder=TRUE))
plot(rules, method="grouped")
plot(rules, method="grouped", control=list(k=50))
sorted <- sort(rules, by="support")
plot(sorted, method="graph", control=list(type="items"))
sortedByLift <- sort(rules, by="lift")
plot(sorted, method="graph", control=list(type="items"))
plot(sorted, method="paracoord")
plot(sorted, method="paracoord", control=list(reorder=TRUE))
setwd("~/git/associationAnalysis/R")
setwd("~/git/associationAnalysis")
library(ggplot2)
library(arules)
library(arulesViz)
system.time(transactions <- read.transactions("assets/unique_pagehits.csv", format="basket", sep=","))
summary(transactions)
# load necessary libraries
library(ggplot2)
library(arules)
library(arulesViz)
system.time(transactions <- read.transactions("assets/unique_pagehits_exclude_frontpage.csv", format="basket", sep=","))
itemFrequencyPlot(transactions, support=0.001)
summary(transactions)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.010, minlen=2)))
inspect(rules)
summary(rules)
sort(rules, by="support")
inspect(sort(rules, by="support"))
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.1, minlen=2)))
inspect(sort(rules, by="support"))
itemFrequency(transactions)
system.time(rules <- apriori(transactions, parameter = list(supp=0.01, conf=0.1, minlen=2)))
summary(rules)
system.time(rules <- apriori(transactions, parameter = list(supp=0.001, conf=0.10, minlen=2)))
summary(rules)
inspect(rules)
inspect(sort(rules, by="support"))
system.time(rules <- apriori(transactions, parameter = list(supp=0.001, conf=0.50, minlen=2)))
inspect(sort(rules, by="support"))
plot(rules, measure="support", shading="lift")
plot(rules, measure=c("support","lift"), shading="confidence")
plot(rules, method="grouped")
sorted <- sort(rules, by="support")
plot(sorted, method="graph", control=list(type="items"))
sortedByLift <- sort(rules, by="lift")
plot(sorted, method="graph", control=list(type="items"))
plot(sorted, method="paracoord")
